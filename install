#!/bin/bash

echo "Check if the script has been executed by root user"
WHOAMI=$(whoami)
if [ "$WHOAMI" != "root" ]; then
	echo "You're executing the script as $WHOAMI instead of root.. exiting"
	exit 1
fi

if [ -e /etc/resolv.conf ]; then
    echo "Fix internet access issue for RAK All-in-One.5G"
    if [ -L /etc/resolv.conf ]; then
        unlink /etc/resolv.conf
    else
        mv /etc/resolv.conf /etc/resolv.conf.bk
    fi
    ln -sf /var/run/systemd/resolve/resolv.conf /etc/resolv.conf
fi

echo "Download configuration files from github"
TMP="/tmp/`uuidgen`"
mkdir -p $TMP
git clone --depth 1 --branch rak https://github.com/herugen/aio5g.git $TMP
rm -rf /etc/open5gs && mv $TMP/etc/open5gs /etc # now we have /etc/open5gs
rm -rf /etc/systemd/network/99-open5gs.net* && mv $TMP/etc/network/99-open5gs.net* /etc/systemd/network/
rm -rf /etc/netplan/50-cloud-init.yaml && mv $TMP/etc/netplan/aio.yaml /etc/netplan/50-cloud-init.yaml
rm -rf $TMP

echo "Generate Nginx certs"
mkdir -p /etc/open5gs/nginx/certs && \
cd /etc/open5gs/nginx/certs && \
openssl req -x509 -newkey rsa:4096 -keyout ssl_certificate.key -out ssl_certificate.crt -days 1825 -nodes -subj "/CN=aio5g.com"

echo "Pulling docker images"
cd /etc/open5gs && docker-compose pull

echo "Enable forwarding and MASQUERADE"
sysctl -w net.ipv4.ip_forward=1
sysctl -w net.ipv6.conf.all.forwarding=1
iptables -t nat -A POSTROUTING -s 10.45.0.0/16 ! -o ogstun -j MASQUERADE
ip6tables -t nat -A POSTROUTING -s 2001:db8:cafe::/48 ! -o ogstun -j MASQUERADE
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

echo "Start services"
cd /etc/open5gs && docker-compose up -d